{"version":3,"sources":["Sprites.js","Ability.js","Types.js","AbilityScreen.js","TypeScreen.js","App.js","index.js"],"names":["Sprites","undefined","this","props","currentImg","alt","src","React","Component","Ability","className","abilities","map","x","key","ability","name","abilityurl","url","onClick","toUpperCase","replace","Types","types","type","typeurl","AbilityScreen","state","prevProps","fetch","then","responseText","json","response","setState","id","effect_entries","effect","pokemon","String","TypeScreen","damage_relations","double_damage_from","double_damage_to","half_damage_from","half_damage_to","no_damage_from","no_damage_to","App","pokemonUrl","pokemonSpecies","currentIndex","componentDidUpdate","bind","handleClickAbility","string","images","sprites","front_default","back_default","front_shiny","back_shiny","e","persist","target","attributes","nodeValue","document","querySelector","classList","add","remove","stateResults","value","handleClickPrevious","handleClickNext","height","weight","number","fixedValue","simpleValue","test","length","fixed","handleClickType","stats","base_stat","array","results","language","flavor_text","resultArray","i","push","returnFirstResult","flavor_text_entries","handleClickCloseScreenAbility","handleClickCloseScreenType","Main","handleClickPokemonList","apiFetch","next","$pageSearcher","fixedNumber","Number","previous","offset","href","readOnly","indexOf","defaultValue","onChange","handleChangePokemonList","previousPage","nextPage","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.e2e5f1e8.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass Sprites extends React.Component {\r\n    render() {\r\n        if (this.props.currentImg !== undefined) {\r\n            return <img\r\n                alt=\"Pokemon\"\r\n                src={this.props.currentImg} />\r\n        }\r\n        else {\r\n            return <div>Loading...</div>\r\n        }\r\n    }\r\n}\r\nexport default Sprites\r\n","import React from 'react'\r\n\r\n\r\nclass Ability extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"abilities\">\r\n                <div>ABILITIES:</div>\r\n                {this.props.abilities.map((x) =>\r\n                    <li key={x.ability.name}\r\n                        abilityurl={x.ability.url}\r\n                        onClick={this.props.onClick}\r\n                    >{x.ability.name.toUpperCase().replace(/-/, ' ')}</li>)}\r\n            </div>)\r\n    }\r\n}\r\n\r\n\r\nexport default Ability","import React from 'react'\r\n\r\n\r\nclass Types extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"types\">\r\n                <div >TYPES:</div>\r\n                {this.props.types.map((x) => <li\r\n                    key={x.type.name}\r\n                    typeurl={x.type.url}\r\n                    onClick={this.props.onClick}>\r\n                    {x.type.name.toUpperCase()}</li>)}\r\n            </div>)\r\n    }\r\n}\r\n\r\n\r\nexport default Types","import React from \"react\"\r\n\r\nclass AbilityScreen extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {}\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.abilityurl !== this.props.abilityurl) {\r\n            fetch(this.props.abilityurl)\r\n                .then((responseText) => responseText.json())\r\n                .then((response) => this.setState(response))\r\n        }\r\n    }\r\n    render() {\r\n        if (this.state.name !== undefined) {\r\n            return <div className=\"hidden ability-screen\">\r\n                <div className=\"ability-screen-text\">ABILITY NAME: {this.state.name.toUpperCase().replace(/-/, ' ')} </div>\r\n                <div className=\"ability-screen-text\">ID: {this.state.id}</div>\r\n                <div className=\"ability-screen-text\">EFFECT: {this.state.effect_entries[0].effect}</div>\r\n                <div className=\"ability-screen-text\">USERS: {this.state.pokemon.map((x) => String(x.pokemon.name.toUpperCase()) + \" \")}</div>\r\n                <button className=\"screen-close\" onClick={this.props.onClick}>Close screen</button>\r\n            </div>\r\n        }\r\n        else { return <div className=\"hidden ability-screen\">Loading...</div> }\r\n    }\r\n}\r\n\r\nexport default AbilityScreen","import React from \"react\"\r\n\r\nclass TypeScreen extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {}\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.typeurl !== this.props.typeurl) {\r\n            fetch(this.props.typeurl)\r\n                .then((responseText) => responseText.json())\r\n                .then((response) => this.setState(response))\r\n        }\r\n    }\r\n    render() {\r\n        if (this.state.name !== undefined) {\r\n            return <div className=\"hidden type-screen\">\r\n                <div className=\"type-screen-text\">TYPE NAME: {this.state.name.toUpperCase()}</div>\r\n                <div className=\"type-screen-text\">ID: {this.state.id}</div>\r\n                <div className=\"type-screen-text\">\r\n                    2x DAMAGE FROM: {this.state.damage_relations.double_damage_from.map((x) => String(x.name.toUpperCase()) + \" \")}<br />\r\n                    2x DAMAGE TO: {this.state.damage_relations.double_damage_to.map((x) => String(x.name.toUpperCase()) + \" \")}</div>\r\n                <div className=\"type-screen-text\">\r\n                    1/2 DAMAGE FROM: {this.state.damage_relations.half_damage_from.map((x) => String(x.name.toUpperCase()) + \" \")}<br />\r\n                    1/2 DAMAGE TO: {this.state.damage_relations.half_damage_to.map((x) => String(x.name.toUpperCase()) + \" \")}</div>\r\n                <div className=\"type-screen-text\">\r\n                    NO DAMAGE FROM: {this.state.damage_relations.no_damage_from.map((x) => String(x.name.toUpperCase()) + \" \")}<br />\r\n                    NO DAMAGE TO: {this.state.damage_relations.no_damage_to.map((x) => String(x.name.toUpperCase()) + \" \")}</div>\r\n                <button className=\"screen-close\" onClick={this.props.onClick}>Close screen</button>\r\n            </div>\r\n        }\r\n        else { return <div className=\"hidden type-screen\">Loading...</div> }\r\n    }\r\n}\r\n\r\nexport default TypeScreen","import React from 'react';\nimport './App.css';\nimport Sprites from \"./Sprites\";\nimport Ability from \"./Ability\"\nimport Types from \"./Types\"\nimport AbilityScreen from './AbilityScreen';\nimport TypeScreen from './TypeScreen';\n\n\nclass App extends React.Component {\n      constructor(props) {\n            super(props);\n            this.state = {\n                  pokemonUrl: \"https://pokeapi.co/api/v2/pokemon/1/\",\n                  pokemonSpecies: \"https://pokeapi.co/api/v2/pokemon-species/1/\",\n                  currentIndex: 0,\n            }\n            this.componentDidUpdate = this.componentDidUpdate.bind(this)\n            this.handleClickAbility = this.handleClickAbility.bind(this)\n      }\n      componentDidMount() {\n            fetch(this.state.pokemonUrl)\n                  .then((responseText) => responseText.json())\n                  .then((response) => this.setState(response))\n                  .then(fetch(this.state.pokemonSpecies)\n                        .then((responseText) => responseText.json())\n                        .then((response) => this.setState(response)))\n      }\n\n      componentDidUpdate(prevProps) {\n            if (prevProps.pokemonUrl !== this.props.pokemonUrl) {\n                  fetch(this.props.pokemonUrl)\n                        .then((responseText) => responseText.json())\n                        .then((response) => this.setState(response))\n                        .then(() => this.setState({\n                              images: [this.state.sprites.front_default, this.state.sprites.back_default, this.state.sprites.front_shiny, this.state.sprites.back_shiny],\n                              currentIndex: 0,\n\n                        }))\n                  fetch(`https://pokeapi.co/api/v2/pokemon-species/${compareUrl(this.props.pokemonUrl)}`)\n                        .then((responseText) => responseText.json())\n                        .then((response) => this.setState(response))\n            }\n      }\n\n\n      handleClickNext() {\n            if (this.state.currentIndex < 3) { this.setState({ currentIndex: this.state.currentIndex + 1 }) }\n      }\n\n      handleClickPrevious() {\n            if (this.state.currentIndex > 0) { this.setState({ currentIndex: this.state.currentIndex - 1 }) }\n      }\n\n      handleClickAbility(e) {\n            e.persist()\n            this.setState({ abilityurl: e.target.attributes.abilityurl.nodeValue })\n            let $main = document.querySelector(\".main\")\n            $main.classList.add(\"hidden\")\n            let $abilityScreen = document.querySelector(\".ability-screen\")\n            $abilityScreen.classList.remove(\"hidden\")\n\n      }\n\n      handleClickCloseScreenAbility() {\n            let $abilityScreen = document.querySelector(\".ability-screen\")\n            $abilityScreen.classList.add(\"hidden\")\n            let $main = document.querySelector(\".main\")\n            $main.classList.remove(\"hidden\")\n      }\n\n      handleClickType(e) {\n            e.persist()\n            this.setState({ typeurl: e.target.attributes.typeurl.nodeValue })\n            let $main = document.querySelector(\".main\")\n            $main.classList.add(\"hidden\")\n            let $typeScreen = document.querySelector(\".type-screen\")\n            $typeScreen.classList.remove(\"hidden\")\n\n      }\n\n      handleClickCloseScreenType() {\n            let $typeScreen = document.querySelector(\".type-screen\")\n            $typeScreen.classList.add(\"hidden\")\n            let $main = document.querySelector(\".main\")\n            $main.classList.remove(\"hidden\")\n      }\n\n      render() {\n            let stateResults = this.state\n            if (this.state.images === undefined) { return <div className=\"welcome\">Welcome to Pokedex by ClassicalJo</div> }\n            if (stateResults) {\n                  return (\n                        <div className=\"app\">\n                              <div className=\"main\">\n                                    <div className=\"sprites\">\n                                          <Sprites currentImg={this.state.images[this.state.currentIndex]} />\n                                          <input className=\"spriteButton\" type=\"button\" value=\"<=\" onClick={() => this.handleClickPrevious()}></input>\n                                          <input className=\"spriteButton\" type=\"button\" value=\"=>\" onClick={() => this.handleClickNext()}></input>\n                                    </div>\n                                    <div className=\"name\" id=\"name\">{this.state.name.toUpperCase()}</div>\n                                    <div className=\"height\">HEIGHT: {stateResults.height / 10} METRE</div>\n                                    <div className=\"weight\">WEIGHT: {stateResults.weight / 10} KG.</div>\n                                    <div className=\"number\">No. {fixed(stateResults.id)}</div>\n                                    <Types \n                                          types={this.state.types} \n                                          onClick={(e) => this.handleClickType(e)}\n                                          />\n                                    <Ability\n                                          abilities={this.state.abilities}\n                                          onClick={(e) => this.handleClickAbility(e)}\n                                    />\n                                    <div className=\"stats\">\n                                          <div>HP: {this.state.stats[5].base_stat}</div>\n                                          <div>ATTACK: {this.state.stats[4].base_stat}</div>\n                                          <div>DEFENSE: {this.state.stats[3].base_stat}</div>\n                                          <div>SPECIAL ATTACK: {this.state.stats[2].base_stat}</div>\n                                          <div>SPECIAL DEFENSE: {this.state.stats[1].base_stat}</div>\n                                          <div>SPEED: {this.state.stats[0].base_stat}</div>\n                                    </div>\n                                    <div className=\"description\">{returnFirstResult(this.state.flavor_text_entries)}</div>\n                              </div>\n                              <AbilityScreen abilityurl={this.state.abilityurl} onClick={() => this.handleClickCloseScreenAbility()} />\n                              <TypeScreen typeurl={this.state.typeurl} onClick={() => this.handleClickCloseScreenType()}/>\n                        </div>\n\n                  )\n\n            } else {\n                  return <div>loading...</div>\n            }\n      }\n}\n// \nfunction fixed(number) {\n      let simpleValue = String(number)\n      let isFixed = /^[0-9][0-9][0-9]$/.test(simpleValue)\n      let fixedValue;\n\n      if (isFixed === true) {\n            fixedValue = simpleValue\n      }\n\n      else {\n            while (simpleValue.length < 3) { simpleValue = \"0\" + simpleValue }\n            fixedValue = simpleValue\n      }\n\n      return fixedValue\n}\n\nfunction compareUrl(string) {\n      let result = string.replace(/^https:\\/\\/pokeapi.co\\/api\\/v2\\/pokemon\\//, \"\")\n      return result\n}\n\nfunction returnFirstResult(array) {\n      let results = array.map((x) => {\n            if (x.language.name === \"en\" && x.flavor_text !== undefined) {\n                  return x.flavor_text\n            } else { return null }\n      })\n      let resultArray = []\n      for (let i = 0; i < results.length; i++) {\n            if (results[i] !== null) { resultArray.push(results[i]) }\n      }\n      return resultArray[0]\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from \"./App\"\n\nclass Main extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleClickPokemonList = this.handleClickPokemonList.bind(this);\n        this.state = {\n            apiFetch: \"https://pokeapi.co/api/v2/pokemon/\",\n            pokemonUrl: \"https://pokeapi.co/api/v2/pokemon/1/\"\n        }\n\n    }\n\n    componentDidMount() {\n        fetch(this.state.apiFetch)\n            .then((responseText) => responseText.json())\n            .then((response) => this.setState(response))\n    }\n\n\n    nextPage() {\n        fetch(this.state.next)\n            .then((responseText) => responseText.json())\n            .then((response) => this.setState(response))\n        let $pageSearcher = document.querySelector(\"#page-searcher\")\n        let fixedNumber = Number($pageSearcher.value) + 1\n        $pageSearcher.value = fixedNumber < 49 ? fixedNumber : 49\n    }\n\n    previousPage() {\n        fetch(this.state.previous)\n            .then((responseText) => responseText.json())\n            .then((response) => this.setState(response))\n        let $pageSearcher = document.querySelector(\"#page-searcher\")\n        let fixedNumber = Number($pageSearcher.value) - 1\n        $pageSearcher.value = fixedNumber > 1 ? fixedNumber : 1\n\n    }\n\n    handleClickPokemonList(e) {\n        this.setState({\n            pokemonUrl: this.state.results[e - 1].url,\n        })\n    }\n\n    handleChangePokemonList() {\n        let $pageSearcher = document.querySelector(\"#page-searcher\")\n        if ($pageSearcher.value !== \"\") {\n            if (/^[0-9]+$/.test($pageSearcher.value) !== true) { $pageSearcher.value = 1 }\n            if (Number($pageSearcher.value) > 49) { $pageSearcher.value = 49 }\n            if (Number($pageSearcher.value) < 1) { $pageSearcher.value = 1 }\n            let offset = $pageSearcher.value * 20 - 20 > 0 ? $pageSearcher.value * 20 - 20 : 0\n            fetch(`https://pokeapi.co/api/v2/pokemon?offset=${offset}&limit=20`)\n                .then((responseText) => responseText.json())\n                .then((response) => this.setState(response))\n        }\n\n\n    }\n\n\n    render() {\n        if (this.state.results !== undefined) {\n            return (\n                <div className=\"container\">\n                    <div className=\"logo\"><a href=\"https://pokeapi.co\">PokéAPI</a></div>\n                    <div className=\"header\"><h1>POKéDEX</h1></div>\n                    <div className=\"sidebar\">\n\n                        <div className=\"list\">{this.state.results.map((x) =>\n                            <input\n                                readOnly={true}\n                                key={x.name}\n                                value={x.name.toUpperCase()}\n                                className=\"pokemonButton\"\n                                onClick={() => this.handleClickPokemonList((this.state.results.indexOf(x) + 1))}\n                            />\n                        )}</div>\n                        <div className=\"searcher\">Page <input id=\"page-searcher\" type=\"text\" defaultValue=\"1\" onChange={() => this.handleChangePokemonList()}></input> of 49</div>\n                        <input className=\"navButton\" type=\"button\" value=\"previous\" onClick={() => this.previousPage()}></input>\n                        <input className=\"navButton\" type=\"button\" value=\"next\" onClick={() => this.nextPage()}></input>\n\n                    </div>\n                    <App\n                        className=\"main\"\n                        pokemonUrl={this.state.pokemonUrl}\n                    />\n                </div >\n            )\n\n        }\n\n        else { return <div>Loading...</div> }\n    }\n}\n\nReactDOM.render(<Main />, document.getElementById(\"root\"))\n\n"],"sourceRoot":""}