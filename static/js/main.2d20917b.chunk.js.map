{"version":3,"sources":["Sprites.js","Ability.js","Types.js","AbilityScreen.js","TypeScreen.js","MovesScreen.js","App.js","index.js"],"names":["Sprites","alt","src","this","props","currentImg","React","Component","defaultProps","Ability","className","abilities","map","x","key","ability","name","abilityurl","url","onClick","toUpperCase","replace","Types","types","type","typeurl","AbilityScreen","state","fetch","then","responseText","json","response","setState","prevProps","undefined","id","effect_entries","effect","pokemon","String","TypeScreen","damage_relations","double_damage_from","double_damage_to","half_damage_from","half_damage_to","no_damage_from","no_damage_to","MovesScreen","movesArray","moves","push","version_group_details","level_learned_at","move","list","swapped","n","length","i","temp","bubbleSort","len","cut","splice","concat","levelsFirstSort","classname","App","pokemonSpecies","currentImageIndex","showTypeScreen","showAbilityScreen","showMovesScreen","componentDidUpdate","bind","handleClickAbility","handleClickType","handleClickMoves","pokemonUrl","removeScreen","pokeName","images","sprites","front_default","back_default","front_shiny","back_shiny","e","target","attributes","nodeValue","stateResults","value","handleClickPrevious","handleClickNext","height","weight","number","fixedValue","simpleValue","test","fixed","stats","base_stat","array","results","language","flavor_text","resultArray","returnFirstResult","flavor_text_entries","Main","apiFetch","currentPage","nextPage","previousPage","handleClickPokemonList","handleKeyDownPokemonList","next","previous","pokename","currentValue","refs","pagesearcher","Number","index","requestedPage","generateUrl","blur","href","readOnly","event","ref","placeholder","onChange","handleChangePokemonList","onKeyDown","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2d20917b.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass Sprites extends React.Component {\r\n    render() {\r\n        return <img\r\n            alt=\"Pokemon\"\r\n            src={this.props.currentImg} />\r\n    }\r\n}\r\n\r\nSprites.defaultProps = { currentImg: \"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/1.png\" }\r\nexport default Sprites\r\n","import React from 'react'\r\n\r\nclass Ability extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"abilities\">\r\n                <div>ABILITIES:</div>\r\n                {this.props.abilities.map((x) =>\r\n                    <li key={x.ability.name}\r\n                        abilityurl={x.ability.url}\r\n                        onClick={this.props.onClick}\r\n                    >{x.ability.name.toUpperCase().replace(/-/, ' ')}</li>)}\r\n            </div>)\r\n    }\r\n}\r\n\r\nexport default Ability","import React from 'react'\r\n\r\nclass Types extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"types\">\r\n                <div >TYPES:</div>\r\n                {this.props.types.map((x) => <li\r\n                    key={x.type.name}\r\n                    typeurl={x.type.url}\r\n                    onClick={this.props.onClick}>\r\n                    {x.type.name.toUpperCase()}</li>)}\r\n            </div>)\r\n    }\r\n}\r\n\r\nexport default Types","import React from \"react\"\r\n\r\nclass AbilityScreen extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {}\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(this.props.abilityurl)\r\n                .then((responseText) => responseText.json())\r\n                .then((response) => this.setState(response))\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.abilityurl !== this.props.abilityurl) {\r\n            fetch(this.props.abilityurl)\r\n                .then((responseText) => responseText.json())\r\n                .then((response) => this.setState(response))\r\n        }\r\n    }\r\n    render() {\r\n        if (this.state.name !== undefined) {\r\n            return (\r\n            <div className=\"screen\">\r\n                <div className=\"screen-text\">ABILITY NAME: {this.state.name.toUpperCase().replace(/-/, ' ')} </div>\r\n                <div className=\"screen-text\">ID: {this.state.id}</div>\r\n                <div className=\"screen-text\">EFFECT: {this.state.effect_entries[0].effect}</div>\r\n                <div className=\"screen-text\">USERS: {this.state.pokemon.map((x) => String(x.pokemon.name.toUpperCase()) + \" \")}</div>\r\n                <button className=\"screen-close\" onClick={this.props.onClick}>Close screen</button>\r\n            </div>\r\n            )\r\n        }\r\n        else { return <div className=\"screen\">Loading...</div> }\r\n    }\r\n}\r\n\r\nexport default AbilityScreen","import React from \"react\"\r\n\r\nclass TypeScreen extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {}\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(this.props.typeurl)\r\n            .then((responseText) => responseText.json())\r\n            .then((response) => this.setState(response))\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.typeurl !== this.props.typeurl) {\r\n            fetch(this.props.typeurl)\r\n                .then((responseText) => responseText.json())\r\n                .then((response) => this.setState(response))\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.state.name !== undefined) {\r\n            return (\r\n            <div className=\"screen\">\r\n                <div className=\"screen-text\">TYPE NAME: {this.state.name.toUpperCase()}</div>\r\n                <div className=\"screen-text\">ID: {this.state.id}</div>\r\n                <div className=\"screen-text\">\r\n                    2x DAMAGE FROM: {this.state.damage_relations.double_damage_from.map((x) => String(x.name.toUpperCase()) + \" \")}<br />\r\n                    2x DAMAGE TO: {this.state.damage_relations.double_damage_to.map((x) => String(x.name.toUpperCase()) + \" \")}</div>\r\n                <div className=\"screen-text\">\r\n                    1/2 DAMAGE FROM: {this.state.damage_relations.half_damage_from.map((x) => String(x.name.toUpperCase()) + \" \")}<br />\r\n                    1/2 DAMAGE TO: {this.state.damage_relations.half_damage_to.map((x) => String(x.name.toUpperCase()) + \" \")}</div>\r\n                <div className=\"screen-text\">\r\n                    NO DAMAGE FROM: {this.state.damage_relations.no_damage_from.map((x) => String(x.name.toUpperCase()) + \" \")}<br />\r\n                    NO DAMAGE TO: {this.state.damage_relations.no_damage_to.map((x) => String(x.name.toUpperCase()) + \" \")}</div>\r\n                <button onClick={this.props.onClick} className=\"screen-close\" >Close screen</button>\r\n            </div>\r\n            )\r\n        }\r\n        else { return <div className=\"screen\">Loading...</div> }\r\n    }\r\n}\r\nexport default TypeScreen","import React from \"react\"\r\n\r\nclass MovesScreen extends React.Component {\r\n    render() {\r\n        let movesArray = []\r\n        if (this.props.moves !== undefined) { this.props.moves.map((x) => movesArray.push([x.version_group_details[0].level_learned_at, x.move.name])) }\r\n        bubbleSort(movesArray)\r\n        levelsFirstSort(movesArray)\r\n\r\n        if (this.props.moves !== undefined) {\r\n            return (\r\n                <div className=\"screen\">\r\n                    {movesArray.map((x) => (<div key={x[1]}> {x[1].toUpperCase().replace(/-/, ' ')} learned at: {x[0]}</div>))}\r\n                    < button onClick={this.props.onClick} className=\"screen-close\" > Close screen</button>\r\n                </div >\r\n            )\r\n        }\r\n        else { return <div classname=\"screen\">Loading...</div> }\r\n    }\r\n}\r\n\r\nexport default MovesScreen\r\n\r\nfunction bubbleSort(list) {\r\n    let swapped\r\n    let n = list.length - 1\r\n    do {\r\n        swapped = false\r\n        for (let i = 0; i < n; i++) {\r\n            // compare pairs of elements\r\n            // if left element > right element, swap\r\n            if (list[i][0] > list[i + 1][0]) {\r\n                const temp = list[i]\r\n                list[i] = list[i + 1]\r\n                list[i + 1] = temp\r\n                swapped = true\r\n            }\r\n        }\r\n    }\r\n    // continue swapping until sorted\r\n    while (swapped)\r\n\r\n    return list\r\n}\r\n\r\nfunction levelsFirstSort(list) {\r\n    let len = list.length\r\n    let cut = 0\r\n    for (let i = 0; i < len; i++) {\r\n        if (list[i][0] === 0) { cut++ }\r\n    }\r\n    let temp = list.splice(0, cut)\r\n    list = list.concat(temp)\r\n    return list\r\n\r\n}","import React from 'react';\nimport './App.css';\nimport Sprites from \"./Sprites\";\nimport Ability from \"./Ability\"\nimport Types from \"./Types\"\nimport AbilityScreen from './AbilityScreen';\nimport TypeScreen from './TypeScreen';\nimport MovesScreen from \"./MovesScreen\"\n\n\nclass App extends React.Component {\n      constructor(props) {\n            super(props);\n            this.state = {\n                  pokemonSpecies: \"https://pokeapi.co/api/v2/pokemon-species/1/\",\n                  currentImageIndex: 0,\n                  showTypeScreen: false,\n                  showAbilityScreen: false,\n                  showMovesScreen: false,\n            }\n            this.componentDidUpdate = this.componentDidUpdate.bind(this)\n            this.handleClickAbility = this.handleClickAbility.bind(this)\n            this.handleClickType = this.handleClickType.bind(this)\n            this.handleClickMoves = this.handleClickMoves.bind(this)\n      }\n\n      componentDidMount() {\n            fetch(this.props.pokemonUrl)\n                  .then((responseText) => responseText.json())\n                  .then((response) => this.setState(response))\n                  .then(fetch(this.state.pokemonSpecies)\n                        .then((responseText) => responseText.json())\n                        .then((response) => this.setState(response)))\n      }\n\n      componentDidUpdate(prevProps) {\n            if (prevProps.pokemonUrl !== this.props.pokemonUrl) {\n                  this.removeScreen()\n                  fetch(`https://pokeapi.co/api/v2/pokemon/${this.props.pokeName}`)\n                        .then((responseText) => responseText.json())\n                        .then((response) => this.setState(response))\n                        .then(() => this.setState((state) => ({\n                              currentImageIndex: 0,\n                              images:\n                                    [state.sprites.front_default,\n                                    state.sprites.back_default,\n                                    state.sprites.front_shiny,\n                                    state.sprites.back_shiny]\n                        })))\n\n                  fetch(`https://pokeapi.co/api/v2/pokemon-species/${this.props.pokeName}`)\n                        .then((responseText) => responseText.json())\n                        .then((response) => this.setState(response))\n            }\n      }\n\n      handleClickNext() {\n            if (this.state.currentImageIndex < 3) { this.setState({ currentImageIndex: this.state.currentImageIndex + 1 }) }\n      }\n\n      handleClickPrevious() {\n            if (this.state.currentImageIndex > 0) { this.setState({ currentImageIndex: this.state.currentImageIndex - 1 }) }\n      }\n\n      handleClickAbility(e) {\n            this.setState({\n                  abilityurl: e.target.attributes.abilityurl.nodeValue,\n                  showAbilityScreen: true,\n            })\n      }\n\n      handleClickType(e) {\n            this.setState({\n                  typeurl: e.target.attributes.typeurl.nodeValue,\n                  showTypeScreen: true\n            })\n      }\n\n      handleClickMoves() {\n            this.setState({\n                  showMovesScreen: true\n            })\n      }\n      removeScreen() {\n            this.setState({\n                  showTypeScreen: false,\n                  showAbilityScreen: false,\n                  showMovesScreen: false,\n            })\n      }\n\n      render() {\n            let stateResults = this.state\n            if (this.state.images === undefined) { return <div className=\"welcome\">Welcome to Pokedex by ClassicalJo</div> }\n            if (stateResults) {\n                  return (\n                        <div className=\"app\">\n                              <div className=\"main\">\n                                    <div className=\"sprites\">\n                                          <Sprites currentImg={this.state.images[this.state.currentImageIndex]} />\n                                          <input className=\"spriteButton\" type=\"button\" value=\"<=\" onClick={() => this.handleClickPrevious()}></input>\n                                          <input className=\"spriteButton\" type=\"button\" value=\"=>\" onClick={() => this.handleClickNext()}></input>\n                                    </div>\n                                    <div className=\"name\" id=\"name\">{this.state.name.toUpperCase()}</div>\n                                    <div className=\"height\">HEIGHT: {stateResults.height / 10} METRE</div>\n                                    <div className=\"weight\">WEIGHT: {stateResults.weight / 10} KG.</div>\n                                    <div className=\"number\">No. {fixed(stateResults.id)}</div>\n                                    <Types\n                                          types={this.state.types}\n                                          onClick={(this.handleClickType)}\n                                    />\n                                    <Ability\n                                          abilities={this.state.abilities}\n                                          onClick={this.handleClickAbility}\n                                    />\n                                    <div className=\"moves\" onClick={this.handleClickMoves}>MOVELIST</div>\n                                    <div className=\"stats\">\n                                          <div>HP: {this.state.stats[5].base_stat}</div>\n                                          <div>ATTACK: {this.state.stats[4].base_stat}</div>\n                                          <div>DEFENSE: {this.state.stats[3].base_stat}</div>\n                                          <div>SPECIAL ATTACK: {this.state.stats[2].base_stat}</div>\n                                          <div>SPECIAL DEFENSE: {this.state.stats[1].base_stat}</div>\n                                          <div>SPEED: {this.state.stats[0].base_stat}</div>\n                                    </div>\n                                    <div className=\"description\">{returnFirstResult(this.state.flavor_text_entries)}</div>\n                                    {this.state.showTypeScreen === true &&\n                                          <TypeScreen\n                                                typeurl={this.state.typeurl}\n                                                showTypeScreen={this.state.showTypeScreen}\n                                                onClick={() => this.removeScreen()} />\n                                    }\n                                    {this.state.showAbilityScreen === true &&\n                                          <AbilityScreen\n                                                abilityurl={this.state.abilityurl}\n                                                showAbilityScreen={this.state.showAbilityScreen}\n                                                onClick={() => this.removeScreen()} />\n                                    }\n                                    {this.state.showMovesScreen === true &&\n                                          <MovesScreen\n                                                moves={this.state.moves}\n                                                showMovesScreen={this.state.showMovesScreen}\n                                                onClick={() => this.removeScreen()} />\n                                    }\n                              </div>\n\n\n                        </div>\n\n                  )\n\n            } else {\n                  return <div>Loading...</div>\n            }\n      }\n}\n\nfunction fixed(number) {\n      let simpleValue = String(number)\n      let isFixed = /^[0-9][0-9][0-9]$/.test(simpleValue)\n      let fixedValue;\n\n      if (isFixed === true) {\n            fixedValue = simpleValue\n      }\n\n      else {\n            while (simpleValue.length < 3) { simpleValue = \"0\" + simpleValue }\n            fixedValue = simpleValue\n      }\n\n      return fixedValue\n}\n\nfunction returnFirstResult(array) {\n      let results = array.map((x) => {\n            if (x.language.name === \"en\" && x.flavor_text !== undefined) {\n                  return x.flavor_text\n            } else { return null }\n      })\n      let resultArray = []\n      for (let i = 0; i < results.length; i++) {\n            if (results[i] !== null) { resultArray.push(results[i]) }\n      }\n      return resultArray[0]\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from \"./App\"\n\nclass Main extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            apiFetch: \"https://pokeapi.co/api/v2/pokemon/\",\n            pokemonUrl: \"https://pokeapi.co/api/v2/pokemon/1/\",\n            currentPage: 1,\n        }\n        this.nextPage = this.nextPage.bind(this)\n        this.previousPage = this.previousPage.bind(this)\n        this.handleClickPokemonList = this.handleClickPokemonList.bind(this)\n        this.handleKeyDownPokemonList = this.handleKeyDownPokemonList.bind(this)\n        \n    }\n\n    componentDidMount() {\n        fetch(this.state.apiFetch)\n            .then((responseText) => responseText.json())\n            .then((response) => this.setState(response))\n    }\n\n    nextPage() {\n        if (this.state.next !== null) {\n            fetch(this.state.next)\n                .then((responseText) => responseText.json())\n                .then((response) => this.setState(response))\n        }\n        this.setState((state) => { if (this.state.currentPage < 49) { state.currentPage++ } })\n    }\n\n    previousPage() {\n        if (this.state.previous !== null) {\n            fetch(this.state.previous)\n                .then((responseText) => responseText.json())\n                .then((response) => this.setState(response))\n        }\n        this.setState((state) => { if (this.state.currentPage > 2) { state.currentPage-- } })\n    }\n\n    handleClickPokemonList(e) {\n        this.setState({ \n            pokeName: e.target.attributes.pokename.nodeValue,\n            pokemonUrl: e.target.attributes.url.nodeValue\n        })\n    }\n\n    handleChangePokemonList() {\n        let currentValue = this.refs.pagesearcher.value\n        let fixedValue = this.refs.pagesearcher.value\n        if (/^[0-9]+$/.test(currentValue) === false) { fixedValue = currentValue.replace(/[^0-9]/, '') }\n        if (Number(fixedValue) > 49) { fixedValue = 49 } \n        else if (Number(fixedValue) < 1) { fixedValue = 1 }\n        this.refs.pagesearcher.value = fixedValue\n    }\n\n    handleKeyDownPokemonList(e) {\n        if (e.key === \"Enter\") {\n            let url = generateUrl(this.refs.pagesearcher.value)\n            fetch(url)\n                .then((responseText) => responseText.json())\n                .then((response) => this.setState(response))\n            this.setState({ currentPage: this.refs.pagesearcher.value })\n            this.refs.pagesearcher.value = ''\n            this.refs.pagesearcher.blur()\n        };\n    }\n\n\n    render() {\n        if (this.state.results !== undefined) {\n            return (\n                <div className=\"container\">\n                    <div className=\"logo\"><a href=\"https://pokeapi.co\">PokéAPI</a></div>\n                    <div className=\"header\"><h1>POKéDEX</h1></div>\n                    <div className=\"sidebar\">\n                        <div className=\"pokemon-list\">{this.state.results.map((x) =>\n                            <input\n                                readOnly={true}\n                                key={x.name}\n                                value={x.name.toUpperCase()}\n                                className=\"pokemonButton\"\n                                url={x.url}\n                                pokename={x.name}\n                                onClick={(event) => this.handleClickPokemonList(event)}\n                            />)}\n                        </div>\n                        <div className=\"searcher\">Page <input\n                            id=\"page-searcher\"\n                            type=\"text\"\n                            ref=\"pagesearcher\"\n                            placeholder={this.state.currentPage}\n                            onChange={() => this.handleChangePokemonList()}\n                            onKeyDown={(event) => this.handleKeyDownPokemonList(event)}>\n                        </input> of 49\n                        </div>\n                        <input className=\"navButton\" type=\"button\" value=\"previous\" onClick={() => this.previousPage()}></input>\n                        <input className=\"navButton\" type=\"button\" value=\"next\" onClick={() => this.nextPage()}></input>\n\n                    </div>\n                    <App\n                        className=\"main\"\n                        pokeName={this.state.pokeName}\n                        pokemonUrl={this.state.pokemonUrl}\n                    />\n                </div >\n            )\n        }\n        else { return <div>Loading...</div> }\n    }\n}\n\nfunction generateUrl(index) {\n    let urlStart = \"https://pokeapi.co/api/v2/pokemon/?offset=\"\n    let requestedPage = String(Number(index) * 20 - 20)\n    let urlEnd = \"&limit=20\"\n    return urlStart + requestedPage + urlEnd\n}\n\nReactDOM.render(<Main />, document.getElementById(\"root\"))\n\n"],"sourceRoot":""}